diff --git a/node_modules/react-native-reanimated/react-native-reanimated.d.ts b/node_modules/react-native-reanimated/react-native-reanimated.d.ts
index 7bdc572..f3a5f82 100644
--- a/node_modules/react-native-reanimated/react-native-reanimated.d.ts
+++ b/node_modules/react-native-reanimated/react-native-reanimated.d.ts
@@ -2,7 +2,7 @@
 // TypeScript Version: 2.8
 
 declare module 'react-native-reanimated' {
-  import { ComponentClass, ReactNode, Component, RefObject, ComponentType } from 'react';
+  import { ComponentClass, ReactNode, Component, RefObject, ComponentType, ComponentProps } from 'react';
   import {
     ViewProps,
     TextProps,
@@ -20,6 +20,8 @@ declare module 'react-native-reanimated' {
     ScrollView as ReactNativeScrollView,
     NativeScrollEvent,
     NativeSyntheticEvent,
+    ColorValue,
+    OpaqueColorValue
   } from 'react-native';
   import {
     GestureHandlerGestureEvent,
@@ -68,12 +70,8 @@ declare module 'react-native-reanimated' {
       interpolate(config: InterpolationConfig): AnimatedNode<number>;
     }
 
-    type RawSharedValue = number | string | boolean | object;
-    type SharedValueType = RawSharedValue | RawSharedValue[];
-    export type SharedValue<T extends SharedValueType> = {
-      value: T;
-    };
-
+    export type SharedValue<T> = { value: T };
+    export type DerivedValue<T> = Readonly<SharedValue<T>>;
     export type Mapping = { [key: string]: Mapping } | Adaptable<any>;
     export type Adaptable<T> =
       | T
@@ -192,7 +190,7 @@ declare module 'react-native-reanimated' {
     };
     export type AnimatedTransform = (AdaptTransforms<TransformStyleTypes>)[];
 
-    export type AnimateStyle<S extends object> = {
+    export type AnimateStyle<S> = {
       [K in keyof S]: K extends 'transform'
         ? AnimatedTransform
         : (S[K] extends ReadonlyArray<any>
@@ -210,15 +208,12 @@ declare module 'react-native-reanimated' {
     };
 
     export type AnimateProps<
-      S extends object,
-      P extends {
-        style?: StyleProp<S>;
-      }
+      P extends object
     > = {
       [K in keyof P]: K extends 'style'
-        ? StyleProp<AnimateStyle<S>>
+        ? StyleProp<AnimateStyle<P[K]>>
         : P[K] | AnimatedNode<P[K]>;
-    };
+    } & { animatedProps?: AnimateProps<P> };
 
     type CodeProps = {
       exec?: AnimatedNode<number>;
@@ -227,22 +222,24 @@ declare module 'react-native-reanimated' {
     };
 
     // components
-    export class View extends Component<AnimateProps<ViewStyle, ViewProps>> {
+    export class View extends Component<AnimateProps<ViewProps>> {
       getNode(): ReactNativeView;
     }
-    export class Text extends Component<AnimateProps<TextStyle, TextProps>> {
+    export class Text extends Component<AnimateProps<TextProps>> {
       getNode(): ReactNativeText;
     }
-    export class Image extends Component<AnimateProps<ImageStyle, ImageProps>> {
+    export class Image extends Component<AnimateProps<ImageProps>> {
       getNode(): ReactNativeImage;
     }
     export class ScrollView extends Component<
-      AnimateProps<ViewStyle, ScrollViewProps>
+      AnimateProps<ScrollViewProps>
     > {
       getNode(): ReactNativeScrollView;
     }
     export class Code extends Component<CodeProps> {}
-    export function createAnimatedComponent<S extends object, P extends { style?: StyleProp<S>; }>(component: ComponentType<P>): ComponentType<AnimateProps<S, P>>;
+    export function createAnimatedComponent<P>(
+      component: ComponentClass<P>
+    ): ComponentType<AnimateProps<P>>;
 
     // classes
     export {
@@ -336,7 +333,7 @@ declare module 'react-native-reanimated' {
       r: Adaptable<number>,
       g: Adaptable<number>,
       b: Adaptable<number>,
-      a?: Adaptable<number>
+      a?: Adaptble<number>
     ): AnimatedNode<number | string>;
     export function diff(value: Adaptable<number>): AnimatedNode<number>;
     export function diffClamp(
@@ -405,12 +402,12 @@ declare module 'react-native-reanimated' {
       easing?: EasingFunction;
     }
     export function withTiming(
-      toValue: number,
+      toValue: number | Exclude<ColorValue, OpaqueColorValue>,  // string as a color value like `"rgba(20,20,20,0)"`
       userConfig?: WithTimingConfig,
       callback?: (isFinished: boolean) => void
     ): number;
     export function withSpring(
-      toValue: number,
+      toValue: number | Exclude<ColorValue, OpaqueColorValue>, // string as a color value like `"rgba(20,20,20,0)"`
       userConfig?: WithSpringConfig,
       callback?: (isFinished: boolean) => void
     ): number;
@@ -418,8 +415,8 @@ declare module 'react-native-reanimated' {
       userConfig: WithDecayConfig,
       callback?: (isFinished: boolean) => void
     ): number;
-    export function cancelAnimation<T extends SharedValue<SharedValueType>>(
-      sharedValue: T
+    export function cancelAnimation<T>(
+      sharedValue: SharedValue<T>
     ): void;
     export function withDelay(delayMS: number, delayedAnimation: number): number;
     export function withRepeat(
@@ -455,12 +452,12 @@ declare module 'react-native-reanimated' {
 
     export function interpolateColor(
       value: number,
-      inputRange: number[],
-      outputRange: string[],
+      inputRange: readonly number[],
+      outputRange: readonly (string | number)[],
       colorSpace?: 'RGB' | 'HSV'
     ): string | number;
 
-    export function makeMutable<T extends SharedValueType>(
+    export function makeMutable<T>(
       initialValue: T
     ): SharedValue<T>;
 
@@ -470,18 +467,18 @@ declare module 'react-native-reanimated' {
     export function useSharedValue<T>(
       initialValue: T,
       shouldRebuild?: boolean
-    ): T extends SharedValueType ? SharedValue<T> : never;
+    ): SharedValue<T>;
 
-    export function useDerivedValue<T extends SharedValueType>(
+    export function useDerivedValue<T>(
       processor: () => T,
       deps?: DependencyList
-    ): SharedValue<T>;
+    ): DerivedValue<T>;
 
     export function useAnimatedReaction<D>(
       dependencies: () => D,
       effects: (dependencies: D) => void,
       deps?: DependencyList
-    );
+    ): void;
 
     export type AnimatedStyleProp<T extends object> = AnimateStyle<T> | RegisteredStyle<AnimateStyle<T>>;
     export function useAnimatedStyle<
@@ -512,6 +509,7 @@ declare module 'react-native-reanimated' {
     ): (...args: Parameters<typeof fn>) => R;
 
     export function useAnimatedRef<T extends Component>(): RefObject<T>;
+    export function defineAnimation<T>(starting: any, factory: () => T): number;
     export function measure<T extends Component>(
       ref: RefObject<T>
     ): {
@@ -745,6 +743,7 @@ declare module 'react-native-reanimated' {
   export const useAnimatedGestureHandler: typeof Animated.useAnimatedGestureHandler;
   export const useAnimatedScrollHandler: typeof Animated.useAnimatedScrollHandler;
   export const useAnimatedRef: typeof Animated.useAnimatedRef;
+  export const defineAnimation: typeof Animated.defineAnimation;
   export const measure: typeof Animated.measure;
   export const scrollTo: typeof Animated.scrollTo;
   export const withTiming: typeof Animated.withTiming;
